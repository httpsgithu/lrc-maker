{"version":3,"file":"ncmc-worker.js","sourceRoot":"","sources":["../worker/ncmc-worker.ts"],"names":[],"mappings":"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","sourcesContent":["const ncmcWorker = self as DedicatedWorkerGlobalScope;\n\nconst CORE_KEY = Uint8Array.of(\n    0x68,\n    0x7a,\n    0x48,\n    0x52,\n    0x41,\n    0x6d,\n    0x73,\n    0x6f,\n    0x35,\n    0x6b,\n    0x49,\n    0x6e,\n    0x62,\n    0x61,\n    0x78,\n    0x57,\n);\n\nconst AES_ECB_DECRYPT = async (keyData: Uint8Array, data: Uint8Array): Promise<Uint8Array> => {\n    /**\n     * simulate ECB with CBC\n     *\n     *  ECB encryption:\n     *           Plaintext                                 Plaintext(padding)\n     *               |                                         |\n     * key -> | block cipher |                   key -> | block cipher |\n     *        |  encryption  |                          |  encryption  |\n     *               |                                         |\n     *           Ciphertext                                Ciphertext(encryptedPadding)\n     *\n     *\n     *  ECB decryption:\n     *           Ciphertext                                Ciphertext(encryptedPadding)\n     *               |                                         |\n     * key -> | block cipher |                   key -> | block cipher |\n     *        |  decryption  |                          |  decryption  |\n     *               |                                         |\n     *           Plaintext                                 Plaintext(padding)\n     *\n     *\n     *  CBC encryption:\n     *          Plaintext                                  Plaintext(padding)\n     *               |                                         |\n     *  iv --------> x                   --------------------> x\n     *               |                   |                     |\n     *        | block cipher |           |              | block cipher |\n     * key -> |  encryption  |           |       key -> |  encryption  |\n     *               |                   |                     |\n     *               | ------------------|                     |\n     *           Ciphertext                                Ciphertext(encryptedPadding)\n     *\n     *\n     *  CBC decryption:\n     *           Ciphertext                                Ciphertext(encryptedPadding)\n     *               |                                         |\n     *  iv --------> x                   --------------------> x\n     *               |                   |                     |\n     *        | block cipher |           |              | block cipher |\n     * key -> |  decryption  |           |       key -> |  decryption  |\n     *               |                   |                     |\n     *               | ------------------|                     |\n     *          Plaintext                                  Plaintext(padding)\n     *\n     *\n     *  Simulate:\n     *   ---------------------------------------|\n     *   |            Plaintext                 |                 Padding\n     *   |                |                     |                    |\n     *   |                |                     -------------------> x\n     *   |                |                                          |\n     *   |          |    ECB     |                             |    CBC     |\n     *   |   key -> | encryption |                      key -> | encryption |\n     *   |                |                                          |\n     *   |---- Ciphertext + encryptedPadding  <==>  encryptedPadding + anoter block (not used)\n     *                    |\n     *     iv(0) ------>  x\n     *                    |\n     *              |    CBC     |\n     *       key -> | decryption |\n     *                    |\n     *                Plaintext\n     */\n\n    const AES = {\n        name: \"AES-CBC\",\n        iv: new Uint8Array(16),\n    };\n\n    const cryptoKey = await crypto.subtle.importKey(\"raw\", keyData, \"AES-CBC\", false, [\"encrypt\", \"decrypt\"]);\n\n    const bodyLength = data.byteLength - 16;\n\n    const tailBlock = data.slice(bodyLength);\n\n    const deTailBlock = await crypto.subtle.decrypt(AES, cryptoKey, tailBlock);\n\n    const decrypted = new Uint8Array(bodyLength + deTailBlock.byteLength);\n\n    decrypted.set(new Uint8Array(deTailBlock), bodyLength);\n\n    const padding = new Uint8Array(16);\n    padding.fill(16);\n    const cipher = new Uint8Array(32);\n\n    for (let curser = 0; curser < bodyLength; curser += 16) {\n        const clip = data.slice(curser, curser + 16);\n\n        const encryptedPadding = await crypto.subtle.encrypt(\n            {\n                name: \"AES-CBC\",\n                iv: clip,\n            },\n            cryptoKey,\n            padding,\n        );\n\n        cipher.set(clip, 0);\n        cipher.set(new Uint8Array(encryptedPadding).slice(0, 16), 16);\n\n        const result = await crypto.subtle.decrypt({ name: \"AES-CBC\", iv: new ArrayBuffer(16) }, cryptoKey, cipher);\n        decrypted.set(new Uint8Array(result), curser);\n    }\n\n    return decrypted;\n};\n\nncmcWorker.addEventListener(\"message\", async (ev) => {\n    const file: File = ev.data;\n    const filebuffer = new FileReaderSync().readAsArrayBuffer(file);\n    const dataview = new DataView(filebuffer);\n\n    if (dataview.getUint32(0, true) !== 0x4e455443 || dataview.getUint32(4, true) !== 0x4d414446) {\n        ncmcWorker.postMessage<IMessage>({ type: \"error\", payload: \"not ncm file\" });\n        ncmcWorker.close();\n    }\n\n    let offset = 10;\n\n    const keyDate = (\n        await ((): Promise<Uint8Array> => {\n            const keyLen = dataview.getUint32(offset, true);\n            offset += 4;\n            const data = new Uint8Array(filebuffer, offset, keyLen).map((uint8) => uint8 ^ 0x64);\n            offset += keyLen;\n\n            return AES_ECB_DECRYPT(CORE_KEY, data);\n        })()\n    ).slice(17);\n\n    const keyBox = ((): Uint8Array => {\n        const box = new Uint8Array(Array(256).keys());\n\n        const keyDataLen = keyDate.length;\n\n        let j = 0;\n\n        for (let i = 0; i < 256; i++) {\n            j = (box[i] + j + keyDate[i % keyDataLen]) & 0xff;\n            [box[i], box[j]] = [box[j], box[i]];\n        }\n\n        return box.map((_, i, arr) => {\n            i = (i + 1) & 0xff;\n            const si = arr[i];\n            const sj = arr[(i + si) & 0xff];\n            return arr[(si + sj) & 0xff];\n        });\n    })();\n\n    {\n        offset += dataview.getUint32(offset, true) + 4;\n        offset += dataview.getUint32(offset + 5, true) + 13;\n    }\n\n    // workaround for Firefox which async function causes performance problems\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1521435\n    const decryptedData = ((): Uint8Array => {\n        const data = new Uint8Array(filebuffer, offset);\n        const dataLength = data.length;\n\n        // console.time(\"decryptedFile\");\n\n        for (let cur = 0; cur < dataLength; ++cur) {\n            data[cur] ^= keyBox[cur & 0xff];\n        }\n\n        // console.timeEnd(\"decryptedFile\");\n\n        return data;\n    })();\n\n    ncmcWorker.postMessage<IMessage>({ type: \"success\", payload: decryptedData }, [decryptedData.buffer]);\n    ncmcWorker.close();\n});\n"]}